version: "3.7"

networks:
  mongo:
    external: true
  mongos:
    external: true

volumes:
    data1: {}
    data2: {}
    data3: {}
    cfg: {}

services:
  s1r1:
    image: mongo:4
    networks:
      - mongo
    volumes:
      - data1:/data/db
    command: mongod --shardsvr --replSet s1rs --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1

  s2r1:
    image: mongo:4
    networks:
      - mongo
    volumes:
      - data2:/data/db
    command: mongod --shardsvr --replSet s2rs --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1

  s3r1:
    image: mongo:4
    networks:
      - mongo
    volumes:
      - data3:/data/db
    command: mongod --shardsvr --replSet s3rs --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1

  cfg1:
    image: mongo:4
    networks:
      - mongo
    volumes:
      - cfg:/data/configdb
    command: mongod --configsvr --replSet cfgrs --smallfiles --port 27017
    deploy:
      mode: replicated
      replicas: 1

  # cfg2:
  #   image: mongo:4
  #   networks:
  #     - mongo
  #   volumes:
  #     - cfg:/data/configdb
  #   command: mongod --configsvr --replSet cfgrs --smallfiles --port 27017
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.mongo.role == cfg2

  # cfg3:
  #   image: mongo:4
  #   networks:
  #     - mongo
  #   volumes:
  #     - cfg:/data/configdb
  #   command: mongod --configsvr --replSet cfgrs --smallfiles --port 27017
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.mongo.role == cfg3

  mongos1:
    image: mongo:4
    networks:
      - mongo
      - mongos
    command: mongos --bind_ip_all --configdb cfgrs/cfg1:27017 # ,cfg2:27017,cfg3:27017
    ports:
      - 27017:27017
    deploy:
      mode: replicated
      replicas: 1
      # placement:
      #   constraints:
      #     - node.labels.mongo.role == mongos1

  # mongos2:
  #   image: mongo:4
  #   networks:
  #     - mongo
  #     - mongos
  #   command: mongos --bind_ip_all --configdb cfgrs/cfg1:27017 # ,cfg2:27017,cfg3:27017
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.mongo.role == mongos2

  bootstrap:
    image: bootstrap
    build: bootstrap
    networks:
      - mongo
    command:
      - '-dataSet=s1rs/s1r1:27017;s2rs/s2r1:27017;s3rs/s3r1:27017'
      - '-configSet=cfgrs/cfg1:27017' # ,cfg2:27017,cfg3:27017'
      - '-mongos=mongos1:27017' # ,mongos2:27017'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager